#! /bin/bash

panic()
{
	echo "FATAL ERROR: $@"
	exit 1
}

in_source_build=0

tmp_dir=/tmp/jasper
install_dir="$tmp_dir/install"
test_dir="$tmp_dir/test"
source_dir=$(pwd) || panic

if [ "$in_source_build" -ne 0 ]; then

	echo "In-source build"

	(cd "$source_dir" && \
	  cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$install_dir" \
	  -DALLOW_IN_SOURCE_BUILD=true .) || panic "cmake failed"

	(cd "$source_dir" && make clean && make all) || \
	  panic "make clean/all failed"

	(cd "$source_dir" && make install) || panic "make install failed"

	(cd "$source_dir" && CTEST_OUTPUT_ON_FAILURE=TRUE make test ARGS="-V") || \
	  panic "make test failed"

else

	build_dir=/tmp/jasper/build

	echo "Out-of-source build"

	# Check building and installing with a static library.

	echo "############################################################"
	echo "############################################################"
	echo "Static Library Case"

	echo "########################################"
	echo "cmake"
	echo "########################################"

	(cd "$source_dir" && \
	  cmake \
	  -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$install_dir" \
	  -DJAS_ENABLE_SHARED=false \
	  -H. -B"$build_dir" \
	  "$@" \
	  ) || panic "cmake failed"

	echo "########################################"
	echo "build"
	echo "########################################"

	(cd "$build_dir" && make clean && make all VERBOSE=1) || \
	  panic "make clean/all failed"

	echo "########################################"
	echo "install"
	echo "########################################"

	(cd "$build_dir" && make install VERBOSE=1) || panic "make install failed"

	echo "########################################"
	echo "external test"
	echo "########################################"

	mkdir -p "$test_dir" || panic "cannot make directory $test_dir"
	for file in build/travis/CMakeLists.txt src/appl/jasper.c; do
		cp "$source_dir/$file" "$test_dir" || \
		  panic "cannot copy $file"
	done
	cmake -H"$test_dir" -B"$test_dir" || panic "cmake failed"
	(cd "$test_dir" && make clean && make all VERBOSE=1) || panic "make failed"

	rm -rf "$build_dir" || panic "cannot remove build directory"

	# Check building and installing with a shared library.

	echo "############################################################"
	echo "############################################################"
	echo "Shared Library Case"

	echo "########################################"
	echo "cmake"
	echo "########################################"

	(cd "$source_dir" && \
	  cmake \
	  -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$install_dir" \
	  -DJAS_ENABLE_SHARED=true \
	  -H. -B"$build_dir" \
	  "$@" \
	  ) || panic "cmake failed"

	echo "########################################"
	echo "build"
	echo "########################################"

	(cd "$build_dir" && make clean && make all VERBOSE=1) || \
	  panic "make clean/all failed"

	echo "########################################"
	echo "install"
	echo "########################################"

	(cd "$build_dir" && make install VERBOSE=1) || panic "make install failed"

	# Also, run the test suite.

	echo "########################################"
	echo "test"
	echo "########################################"

	(cd "$build_dir" && CTEST_OUTPUT_ON_FAILURE=TRUE make test ARGS="-V") || \
	  panic "make test failed"

fi
